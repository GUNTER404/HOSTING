name: Minecraft Paper Server

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "*/30 * * * *"
jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup nodejs
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Start ngrok (Minecraft + VNC)
      run: |
        npm install -g ngrok
        ngrok config add-authtoken 2BqKKlKfW5O5QAWLoEiiTpiwODn_7yXaqxUNiFvzCRcjfXiCb
        ngrok tcp 25565 &
        ngrok http 6080 &
        sleep 5

    - name: Install Xvfb and TightVNC
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb tightvncserver

    - name: Start virtual display
      run: |
        Xvfb :99 -screen 0 1024x768x24 &
        echo "DISPLAY=:99" >> $GITHUB_ENV

    - name: Configure VNC password
      run: |
        mkdir -p ~/.vnc
        echo "password" | vncpasswd -f > ~/.vnc/passwd
        chmod 600 ~/.vnc/passwd

    - name: Start VNC Server
      run: vncserver :99 -geometry 1024x768 -depth 24 -localhost no &

    - name: Install noVNC
      run: sudo snap install novnc

    - name: Start noVNC
      run: |
        sudo novnc --listen 6080 --vnc localhost:5901 &
        sleep 5

    - name: Get Minecraft ngrok URL
      id: ngrok_mc
      run: |
        MC_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[] | select(.proto == "tcp") | .public_url')
        echo "Minecraft Server Address: $MC_URL"
        echo "mc_url=$MC_URL" >> $GITHUB_OUTPUT

    - name: Get VNC ngrok URL
      id: ngrok_vnc
      run: |
        VNC_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[] | select(.proto == "http") | .public_url')
        echo "VNC Access URL: $VNC_URL"
        echo "vnc_url=$VNC_URL" >> $GITHUB_OUTPUT

    - name: Start Minecraft Paper Server
      run: |
        # Add your Minecraft server startup commands here
        # Example:
        # wget https://api.papermc.io/v2/projects/paper/versions/1.20.1/builds/177/downloads/paper-1.20.1-177.jar
        # java -jar paper-1.20.1-177.jar nogui

    - name: keep alive
      id: check_runs
      run: |
        echo "has_new_run=false" >> $GITHUB_OUTPUT
        while true; do
          sleep 10
          latest_run=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?per_page=1&status=queued&status=in_progress" | \
            jq -r '.workflow_runs[0].id')
          if [[ $latest_run != ${{ github.run_id }} ]]; then
            echo "has_new_run=true" >> $GITHUB_OUTPUT
            break
          fi
        done
        
    - name: Stop workflow
      if: steps.check_runs.outputs.has_new_run == 'true'
      run: exit 0

    - name: keep
      if: steps.check_runs.outputs.has_new_run == 'false'
      run: sleep 600000000
